class Solution {
  public:
    string addBinary(string& s1, string& s2) {
        // your code here
        if(s1 == "0" && s2 == "0") return "0"; // special case
        
        int carry = 0;
        string ans; 
        
        int i = s1.size() - 1;
        int j = s2.size() - 1;
        
        while( i >= 0 || j >= 0 || carry){
            int sumVal = carry;
            
            if(i >= 0){
                sumVal += (s1[i] - '0');
                i--;
            }
            
            if(j >= 0){
                sumVal += (s2[j] - '0');
                j--;
            }
            
            ans.push_back((sumVal % 2) + '0');
            carry = sumVal / 2;
        }
        
        reverse(ans.begin(), ans.end());
        
        // handle the starting leading zeros
        while(ans[0] == '0'){
            ans.erase(ans.begin());
        }
        
        return ans;
    }
};
