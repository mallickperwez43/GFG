/*
class Node {
  public:
    int data;
    Node* left;
    Node* right;
    Node(int val) {
        data = val;
        left = right = nullptr;
    }
};
*/

class Solution {
  public:
    
    int countNodes(Node* root) {
        if(root == NULL)
            return 0;
        
        return 1 + countNodes(root -> left) + countNodes(root -> right);
    }
    
    void solve(Node* root, int& cnt, int target, int& result) {
        if(root == NULL) 
            return;
        
        solve(root -> left, cnt, target, result);
        
        cnt++; // covered a node
        
        if(cnt == target) {
            result = root -> data;
            return;
        }
        
        solve(root -> right, cnt, target, result);
    }
    
    int findMedian(Node* root) {
        // Code here
        int nodesCnt = countNodes(root);
        int median = (nodesCnt & 1) ? (nodesCnt + 1) >> 1 : nodesCnt >> 1;
        int result = 0;
        int cnt = 0;
        solve(root, cnt, median, result);
        return result;
    }
};
