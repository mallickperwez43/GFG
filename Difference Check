class Solution {
  public:
    
    int convertTime(string& s){
        // s = HH : MM : SS
        int hours   = stoi(s.substr(0, 2));
        int minutes = stoi(s.substr(3, 2));
        int seconds = stoi(s.substr(6));
        
        return ((3600 * hours) + (60 * minutes) + seconds);
    }
    
    int minDifference(vector<string> &arr) {
        // code here
        int n = arr.size();
        
        // convert every time in seconds and store in an array
        vector<int> timeInSeconds(n, -1);
        for(int i = 0; i < n; i++) {
            timeInSeconds[i] = convertTime(arr[i]);
        }
        
        // sort the time with seconds in the array
        sort(timeInSeconds.begin(), timeInSeconds.end());
        
        // check for each diff
        int minDiff = INT_MAX;
        for(int i = 1; i < n; i++) {
            minDiff = min(minDiff, timeInSeconds[i] - timeInSeconds[i - 1]);
        }
        
        // edge case -> check differnce between the day change and clock resets
        // 23:59:59 to 00:00:01 is 2 seconds
        int totalSecondsInADay = 86400; // 24 hours and 3600 seconds in an hour
        int lastDiff = totalSecondsInADay - (timeInSeconds[n - 1] - timeInSeconds[0]);
        
        minDiff = min(minDiff, lastDiff);
        
        return minDiff;
    }
};
