int solve(Node* root, int x, int& count){
    if(root == NULL){
        return 0;
    }
    
    int leftSum = solve(root -> left, x, count);
    int rightSum = solve(root -> right, x, count);
    
    int curSum = root -> data + leftSum + rightSum;
    
    if(curSum == x){
        count++;
    }
    
    return curSum;
}
//User function Template for C++
/*
Structure of the node of the binary tree is as
struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
};
*/
//Function to count number of subtrees having sum equal to given sum.
int countSubtreesWithSumX(Node* root, int X)
{
	// Code here
	int count = 0;
	solve(root, X, count);
	return count;
}
