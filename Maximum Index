class Solution{
public:
    int maxIndexDiff(int arr[], int n) {
        // code here
        vector<int> leftMin(n);
        vector<int> rightMax(n);
        
        // fill the leftMin from left to right(prefix)
        leftMin[0] = arr[0];
        for(int i = 1; i < n; i++){
            leftMin[i] = min(arr[i], leftMin[i - 1]);
        }
        
        // fill the rightMax from right to left(suffix)
        rightMax[n - 1] = arr[n - 1];
        for(int i = n - 2; i >= 0; i--){
            rightMax[i] = max(arr[i], rightMax[i + 1]);
        }
        
        // two pointer
        int i = 0; // leftMin
        int j = 0; // rightMax;
        
        // maximize the diff range
        int maxDiff = -1;
        while(i < n && j < n){
            if(leftMin[i] <= rightMax[j]){
                maxDiff = max(maxDiff, j - i);
                j++;
            }
            else{
                i++;
            }
        }
        
        return maxDiff;
    }

};
