class Solution {
  public:
    vector<int> computeLPS(string& s){
        int n = s.length();
        vector<int> lps(n, 0);
        
        int len = 0;
        int i = 1;
        
        while(i < n){
            if(s[i] == s[len]){
                len++; // found another len of matching string till now;
                lps[i] = len;
                i++;
            }
            else{
                if(len != 0){ // calulate len
                    len = lps[len - 1];
                }
                else{
                    lps[i] = 0;
                    i++;
                }
            }
        }
        
        return lps;
    }
    
    int minChar(string& s) {
        // Write your code here
        string revStr = s;
        reverse(revStr.begin(), revStr.end());
        
        // compute LPS 
        string str = s + '#' + revStr;
        vector<int> arr = computeLPS(str);
        return s.length() - arr.back();
    }
};
