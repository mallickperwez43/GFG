/*
  Reverse a linked list
  The input list will have at least one element  
  Return the node which points to the head of the new LinkedList
  Node is defined as 
    struct node
    {
        int data;
        struct node* next;
    
        node(int x){
            data = x;
            next = NULL;
        }
    
    }*head;
*/

class Solution
{
    public:
    struct node *reverseIt (struct node *head, int k)
    { 
        // Complete this method
        if(head == NULL)
            return head;

        // Reverse first k nodes iteratively
        node* ahead = NULL;
        node* cur = head;
        node* prev = NULL;
        int count = 0;
        
        while(cur != NULL and count < k){
            ahead = cur -> next;
            cur -> next = prev;
            prev = cur;
            cur = ahead;
            count++;
        }

        // Reverse the rest node recursively
        if(ahead != NULL){
            head -> next = reverseIt(ahead, k);
        }
        
        return prev;
    }
};
