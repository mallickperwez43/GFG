class Solution{
    public:
    // arr : given array
    // l : starting index of the array i.e 0
    // r : ending index of the array i.e size-1
    // k : find kth smallest element and return using this function
    int kthSmallest(int arr[], int l, int r, int k) {
        //code here
        quickSort(arr, l , r);
        
        return arr[k - 1];
    }
    
    void quickSort(int arr[], int l, int r){
        if(l >= r)
            return;
        
        int p = partition(arr, l, r);
        
        quickSort(arr, l, p - 1);
        quickSort(arr, p + 1, r);
    }
    
    int partition(int arr[], int l , int r){
        int pivot = arr[r];
        
        int pivotIndex = l;
        for(int i = l; i < r; i++){
            if(arr[i] < pivot){
                swap(arr[i], arr[pivotIndex]);
                pivotIndex++;
            }
        }
        swap(arr[pivotIndex], arr[r]);
        return pivotIndex;
    }
};
