class Solution
{
    public:
    
    void solve(int idx, int a[], int n, string& output, string mapping[], vector<string>& ans){
        if(idx >= n){
            ans.push_back(output);
            return;
        }
        
        int curAt = a[idx];
        string cur = mapping[curAt];
        for(int i = 0; i < cur.length(); i++){
            output.push_back(cur[i]);
            solve(idx + 1, a, n, output, mapping, ans);
            output.pop_back();
        }
    }
    
    //Function to find list of all words possible by pressing given numbers.
    vector<string> possibleWords(int a[], int N)
    {
        //Your code here
        vector<string> ans;
        if(N == 0){
            return ans;
        }
        
        string mapping[10] = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        int index = 0;
        string output = "";
        
        solve(index, a, N, output, mapping, ans);
        
        return ans;
    }
};


// using vector

class Solution {
  public:
    
    void solve(int idx, int n, string& temp, vector<string>& mp, vector<int>& arr, vector<string>& result) {
        // base case
        if(idx == n) {
            result.push_back(temp);
            return;
        }
        
        if(arr[idx] == 0 || arr[idx] == 1) {
            solve(idx + 1, n, temp, mp, arr, result);
            return;
        }
        
        for(char& ch : mp[arr[idx]]) {
            temp.push_back(ch);
            solve(idx + 1, n, temp, mp, arr, result);
            temp.pop_back();
        }
    }
    
    vector<string> possibleWords(vector<int> &arr) {
        // code here
        int n = arr.size();
        vector<string> result;
        if(n == 0) {
            return result;
        }
        
        vector<string> mp = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        int idx = 0;
        string temp = "";
        
        solve(idx, n, temp, mp, arr, result);
        
        return result;
    }
};
