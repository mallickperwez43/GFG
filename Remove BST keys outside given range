// User function Template for C++

/*struct Node
{
    int data;
    Node* left;
    Node* right;
};*/
class Solution {
    public:
    Node* removekeys(Node* root, int l, int r) {
        // code here
        if(root == NULL) return NULL;
        
        root -> left = removekeys(root -> left, l, r);
        root -> right = removekeys(root -> right, l, r);
        
        if(root -> data < l){
            return root -> right;
        }
        else if(root -> data > r){
            return root -> left;
        }
        else{
            return root;
        }
        
        return root;
    }
};



// way 2

/*
class Node {
  public:
    int data;
    Node* left;
    Node* right;

    Node(int val) {
        data = val;
        left = NULL;
        right = NULL;
    }
};
*/

class Solution {
  public:
    Node* removekeys(Node* root, int l, int r) {
        // code here
        
        // base case
        if(root == NULL) {
            return NULL;
        }
        
        root -> left  = removekeys(root -> left, l, r);
        root -> right = removekeys(root -> right, l, r);
        
        if(root -> data < l) {
            Node* right_subtree = root -> right;
            delete root;
            return right_subtree;
        }
        
        if(root -> data > r) {
            Node* left_subtree = root -> left;
            delete root;
            return left_subtree;
        }
        
        return root;
    }
};
