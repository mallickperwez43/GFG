/*

Definition for Binary Tree Node
struct Node
{
    int data;
    struct Node* left;
    struct Node* right;

    Node(int x){
        data = x;
        left = right = NULL;
    }
};
*/

class Solution {
  public:
   
    void solve(Node* root, vector<int>& curPath, vector<vector<int>>& res) {
        // base case
        if(root == NULL) {
            return;
        }
        
        if(root -> left == NULL && root -> right == NULL) {
            curPath.push_back(root -> data); // Do
            res.push_back(curPath);  // Explore
            curPath.pop_back(); // Undo
            return;
        }
        
        curPath.push_back(root -> data); // Do
        
        // Explore
        solve(root -> left, curPath, res);
        solve(root -> right, curPath, res);
        
        curPath.pop_back(); // Undo
    } 
    
    vector<vector<int>> Paths(Node* root) {
        // code here
        vector<vector<int>> res;
        vector<int> curPath;
        solve(root, curPath, res);
        return res;
    }
};
