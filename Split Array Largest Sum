class Solution {
  public:
    
    bool canSplit(int mid, int k, vector<int>& arr) {
        int sum = 0;
        int partitions = 0;
        for(int& el : arr) {
            if(el > mid)
                return false;
            
            sum += el;
            
            if(sum > mid) {
                partitions++;
                sum = el;
            }
        }
        
        int totalSubarrays = partitions + 1;
        
        return totalSubarrays <= k;
    }
    
    int splitArray(vector<int>& arr, int k) {
        // code here
        int l = 1;
        int r = accumulate(arr.begin(), arr.end(), 0);
        int result = -1;
        
        while(l <= r) {
            int mid = l + (r - l) / 2;
            
            if(canSplit(mid, k, arr)) {
                result = mid;
                r = mid - 1;
            }
            else 
                l = mid + 1;
        }
        
        return result;
    }
};
