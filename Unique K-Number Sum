class Solution {
  public:
    
    void solve(int num, int currSum, int target, int size, vector<int>& temp, vector<vector<int>>& result) {
        // base case
        if(temp.size() == size) {
            if(currSum == target) {
                result.push_back(temp);
            }
            return;
        }
        
        for(int value = num; value <= 9; value++) {
            if(currSum > target)
                break;
            
            currSum += value;         // Do
            temp.push_back(value);    // Do
            
            solve(value + 1, currSum, target, size, temp, result); // Explore
            
            
            currSum -= value;         // Undo
            temp.pop_back();          // Undo
        }
    }
    
    vector<vector<int>> combinationSum(int n, int k) {
        // code here
        vector<vector<int>> result;
        vector<int> temp;
        
        solve(1, 0, n, k, temp, result);
        
        return result;
    }
};
