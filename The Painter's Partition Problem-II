class Solution {
  public:
    
    bool isPossible(int paintLimit, int paintersCount, vector<int>& arr) {
        int curPaint      = 0; // paint length to assign a  
        int curPainterCnt = 1;
        
        for(int i = 0; i < arr.size(); i++) {
            curPaint += arr[i];
            
            if(curPaint > paintLimit) {
                curPaint = arr[i];
                curPainterCnt++;
            }
        }
        
        return curPainterCnt <= paintersCount;
    }
    
    int minTime(vector<int>& arr, int k) {
        // code here
        
        // return minimum time
        
        int maxEl = INT_MIN;
        int sum   = 0;
        for(int& el : arr) {
            sum += el;
            maxEl = max(maxEl, el);
        }
        
        int low  = maxEl; // min possible board to paint it to one painter alone
        int high = sum;
        
        int ans  = -1;
        
        while(low <= high) {
            int mid = low + (high - low) / 2;
            
            if(isPossible(mid, k, arr)) {
                ans = mid;
                high = mid - 1;
            }
            else {
                low = mid + 1;
            }
        }
        
        return ans;
    }
};
