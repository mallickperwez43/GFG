class Solution {
  public:
    int minCost(int n, int m, vector<int>& x, vector<int>& y) {
        //  code here
        long long cost = 0;
        
        int horizontal_segments = 1; // no of sections horizontally 
        int vertical_segments   = 1; // no of sections vertically
        
        // sort in decreasing order
        sort(x.begin(), x.end(), greater<int>());
        sort(y.begin(), y.end(), greater<int>());
        
        
        int i = 0; // x -> vertical cuts
        int j = 0; // y -> horizontal cuts
        
        while(i < x.size() && j < y.size()) {
            if(x[i] >= y[j]) { // vertical cut
                cost += x[i] * horizontal_segments;
                vertical_segments++;
                i++;
            }
            else { // horizontal cut
                cost += y[j] * vertical_segments;
                horizontal_segments++;
                j++;
            }
        }
        
        while(i < x.size()) {
            cost += x[i] * horizontal_segments;
            vertical_segments++;
            i++;
        }
        
        while(j < y.size()) {
            cost += y[j] * vertical_segments;
            horizontal_segments++;
            j++;
        }
        
        return cost;
    }
};
