class Solution
{
    public:
    void merge(int arr[], int l, int m, int r)
    {
        // Your code here
        
        int a = m - l + 1;
        int b = r - m;
        
        int arr1[a];
        int arr2[b];
        
        int index = l;
        
        for(int i = 0; i < a; i++){
            arr1[i] = arr[index++];
        }
        
        index = m + 1;
        
        for(int i = 0; i < b; i++){
            arr2[i] = arr[index++];
        }
        
        int i = 0, j = 0, k = l;
        
        while(i < a and j < b){
            if(arr1[i] <= arr2[j]){
                arr[k++] = arr1[i++];
            }
            else{
                arr[k++] = arr2[j++];
            }
        }
        
        while(i < a){
            arr[k++] = arr1[i++];
        }
        
        while(j < b){
            arr[k++] = arr2[j++];
        }
    }
    public:
    void mergeSort(int arr[], int l, int r)
    {
        //code here
        //base case
        if(l >= r)
            return;
            
        int m = l + (r - l) / 2;
        
        mergeSort(arr, l, m);
        mergeSort(arr, m + 1, r);
        
        merge(arr, l , m , r);
    }
};
