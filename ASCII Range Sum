class Solution {
  public:
    vector<int> asciirange(string& s) {
        // code here
        int n = s.length();
        
        // store the first and last occurance of every character
        vector<int> firstOcc(26, -1);
        vector<int> lastOcc(26, -1);
        
        for(int i = 0; i < n; i++) {
            int idx = s[i] - 'a';
            
            if(firstOcc[idx] == -1) {
                firstOcc[idx] = i;
            }
            lastOcc[idx] = i;
        }
        
        // calculate prefix sum of all the char in string
        vector<int> prefixSum(n);
        prefixSum[0] = (int)s[0];
        
        for(int i = 1; i < n; i++) {
            prefixSum[i] = prefixSum[i - 1] + (int)s[i];
        }
        
        vector<int> result;
        for(int i = 0; i < 26; i++) {
            int left = firstOcc[i];
            int right = lastOcc[i];
            
            if(left != -1 && right != -1 && right > left + 1) {
                // calculating the sum between two repeating characters
                int sum = prefixSum[right - 1] - prefixSum[left];
                result.push_back(sum);
            }
        }
        
        return result;
    }
};
