class Solution {
  public:
    typedef pair<int, int> P;
    vector<int> topKFreq(vector<int> &arr, int k) {
        // Code here
        unordered_map<int, int> mp;
        for(int& el : arr) {
            mp[el]++;
        }
        
        priority_queue<P, vector<P>, greater<P>> pq;
        for(auto& p : mp) {
            pq.push(make_pair(p.second, p.first));
            if(pq.size() > k) {
                pq.pop();
            }
        }
        
        vector<int> result;
        while(!pq.empty()) {
            result.push_back(pq.top().second);
            pq.pop();
        }
        
        reverse(result.begin(), result.end());
        
        return result;
    }
};
