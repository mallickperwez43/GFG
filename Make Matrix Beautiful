class Solution {
  public:
    int balanceSums(vector<vector<int>>& mat) {
        // code here
        int n = mat.size();
        
        int maxSum = 0;
        
        // get the maxSum from rowSum and colSum
        // row -> [i][j]
        // col -> [j][i]
        for(int i = 0; i < n; i++) {
            int rowSum = 0;
            int colSum = 0;
            for(int j = 0; j < n; j++) {
                rowSum += mat[i][j];
                colSum += mat[j][i];
            }
            maxSum = max(maxSum, max(rowSum, colSum));
        }
        
        // get the diff of maxSum - rowSum of every row
        int opCount = 0;
        for(int i = 0; i < n; i++) {
            int rowSum = 0;
            for(int j = 0; j < n; j++) {
                rowSum += mat[i][j];
            }
            opCount += maxSum - rowSum;
        }
        
        return opCount;
    }
};
